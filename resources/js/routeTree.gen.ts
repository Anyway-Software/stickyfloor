/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const TicketsLazyImport = createFileRoute('/tickets')()
const RegisterLazyImport = createFileRoute('/register')()
const LoginLazyImport = createFileRoute('/login')()
const GoogleCallbackLazyImport = createFileRoute('/google-callback')()
const EventsLazyImport = createFileRoute('/events')()
const DashboardLazyImport = createFileRoute('/dashboard')()
const CreateeventLazyImport = createFileRoute('/create_event')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const EditeventEventIdLazyImport = createFileRoute('/edit_event/$eventId')()

// Create/Update Routes

const TicketsLazyRoute = TicketsLazyImport.update({
  path: '/tickets',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/tickets.lazy').then((d) => d.Route))

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const GoogleCallbackLazyRoute = GoogleCallbackLazyImport.update({
  path: '/google-callback',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/google-callback.lazy').then((d) => d.Route),
)

const EventsLazyRoute = EventsLazyImport.update({
  path: '/events',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/events.lazy').then((d) => d.Route))

const DashboardLazyRoute = DashboardLazyImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dashboard.lazy').then((d) => d.Route))

const CreateeventLazyRoute = CreateeventLazyImport.update({
  path: '/create_event',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/create_event.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const EditeventEventIdLazyRoute = EditeventEventIdLazyImport.update({
  path: '/edit_event/$eventId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/edit_event.$eventId.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/create_event': {
      id: '/create_event'
      path: '/create_event'
      fullPath: '/create_event'
      preLoaderRoute: typeof CreateeventLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/events': {
      id: '/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsLazyImport
      parentRoute: typeof rootRoute
    }
    '/google-callback': {
      id: '/google-callback'
      path: '/google-callback'
      fullPath: '/google-callback'
      preLoaderRoute: typeof GoogleCallbackLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/tickets': {
      id: '/tickets'
      path: '/tickets'
      fullPath: '/tickets'
      preLoaderRoute: typeof TicketsLazyImport
      parentRoute: typeof rootRoute
    }
    '/edit_event/$eventId': {
      id: '/edit_event/$eventId'
      path: '/edit_event/$eventId'
      fullPath: '/edit_event/$eventId'
      preLoaderRoute: typeof EditeventEventIdLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AboutLazyRoute,
  CreateeventLazyRoute,
  DashboardLazyRoute,
  EventsLazyRoute,
  GoogleCallbackLazyRoute,
  LoginLazyRoute,
  RegisterLazyRoute,
  TicketsLazyRoute,
  EditeventEventIdLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/create_event",
        "/dashboard",
        "/events",
        "/google-callback",
        "/login",
        "/register",
        "/tickets",
        "/edit_event/$eventId"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/create_event": {
      "filePath": "create_event.lazy.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.lazy.tsx"
    },
    "/events": {
      "filePath": "events.lazy.tsx"
    },
    "/google-callback": {
      "filePath": "google-callback.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/register": {
      "filePath": "register.lazy.tsx"
    },
    "/tickets": {
      "filePath": "tickets.lazy.tsx"
    },
    "/edit_event/$eventId": {
      "filePath": "edit_event.$eventId.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
